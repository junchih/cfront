.\" ident	@(#)G2++:g2++lib/man/intro.3	3.2
.\"
.\" C++ Standard Components, Release 3.0.
.\"
.\" Copyright (c) 1991, 1992 AT&T and UNIX System Laboratories, Inc.
.\" Copyright (c) 1988, 1989, 1990 AT&T.  All Rights Reserved.
.\"
.\" THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T and UNIX System
.\" Laboratories, Inc.  The copyright notice above does not evidence
.\" any actual or intended publication of such source code.
.\" 
.TH \f3intro\fP \f3G2++(3C++)\fP " " 
.SH NAME
intro \- introduction to G2++ input/output
.SH DESCRIPTION
A G2++ record is a sequence of printable ASCII characters 
consisting of \f2names\f1 and \f2values\f1
with hierarchical relationships implied
by tabs and newlines (see \f3G2++(4C++)\f1 for a 
formal syntax definition with examples).  
Messages used for interprocess communication 
or records used for long-term data storage can
both be structured as G2++ records.
.PP
This component provides two kinds of I/O routines 
for reading and writing G2++ records: 
.IP "\f3G2++ typed I/O routines \- see typed_io(.)\f1"
These routines are generated by the G2++ compiler, 
\f3g2++comp(1C++)\f1.
The compiler reads \f3.g\f1 files containing 
G2++ record definitions. 
For each \f3.g\f1 file, it produces 
a pair of files: a header file and a code file.
The header file declares a type together with stream 
insertion and extraction operators for that type.
By including the header file, clients can read
G2++ records into program variables and write G2++
records from program variables, with type 
translation to and from ASCII handled automatically
by the I/O routines.
.IP "\f3G2++ untyped I/O routines \- see untyped_io(.)\f1"
These are \f2library routines\f1 that can be used with 
arbitrary record types.  They map between G2++ records 
and \f2navigable syntax trees\f1.
.PP
In addition, this component provides two auxiliary
types used in conjunction with typed I/O:
.IP "\f3class Vblock \- see Vblock(.)\f1"
If a G2++ record definition (see \f3G2++(4C++)\f1 specifies
an array, then the corresponding declaration generated
by \f3g2++comp(1C++)\f1 will contain a Vblock.
.IP "\f3class G2text \- see G2text(.)\f1"
A user-defined type that can be "hooked in" to the 
typed I/O operations whenever Strings containing
non-printable characters must be input or output.
.SH "SEE ALSO"
.Bf
\f3G2++(4C++)\f1
\f3g2++comp(1C++)\f1
\f3G2text(.)\f1
\f3typed_io(.)\f1
\f3untyped_io(.)\f1
\f3Vblock(.)\f1
.Be
